#!/usr/bin/env bash

set -o errexit
set -o nounset
set -o pipefail


working_dir="$(dirname ${0})"

source "${working_dir}/_sourced/constants.sh"
source "${working_dir}/_sourced/messages.sh"


if [[ -z ${1+x} ]]; then
    message_error "Backup file is not specified yet it is a required parameter.
    Make sure you provide one and try again."
    exit 1
fi

backup_filename="${BACKUP_DIR_PATH}/${1}"

if [[ ! -f "${backup_filename}" ]]; then
    message_error "No backup with this specified file name is found.
    Checkout 'backups' script output to verify."
    exit 1
fi

message_welcome "Restoring the '${POSTGRES_DB}' database from the '${backup_filename}' backup."

if [[ "${POSTGRES_USER}" == "postgres" ]]; then
    message_error "Restoring up as 'postgres' user not allowed. Assign a 'POSTGRES_USER' env with another one  and try again."
    exit 1
fi

export PGHOST="${POSTGRES_HOST}"
export PGPORT="${POSTGRES_PORT}"
export PGUSER="${POSTGRES_USER}"
export PGPASSWORD="${POSTGRES_PASSWORD}"
export PGDATABASE="${POSTGRES_DB}"

message_info "Dropping the database..."

dropdb "${PGDATABASE}"

message_info "Creating a new database..."

createdb --owner="${PGUSER}"

message_info "Applying the backup to new database..."

gunzip -c "${backup_filename}" | psql "${PGDATABASE}"

message_success "The '${PGDATABASE}' databse has been restored successfullly from
the '${backup_filename}' backup"